<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="extras/bootstrap.min.css">
  <style>
    .window {
      min-height: 33vh;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center; 
      font-weight: light;
    }
    
    .alerts {
      min-height: 20vh;
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: flex-start;
      font-weight: light;
    }

        /* Styles for screens smaller than or equal to 576px */
    @media (max-width: 576px) {
      /* CSS rules for small screens */
      body {
        font-size: 5vh;
        font-family: 'Bahnschrift', sans-serif;
        color:aliceblue
      }
    }

    /* Styles for screens between 577px and 992px */
    @media (min-width: 577px) and (max-width: 900px) {
      /* CSS rules for medium screens */
      body {
        font-size: 4vh;
        font-family: 'Bahnschrift', sans-serif;
        color:aliceblue
      }
    }

    /* Styles for screens larger than or equal to 993px */
    @media (min-width: 901px) {
      /* CSS rules for large screens */
      body {
        font-size: 2.6vh;
        font-family: 'Bahnschrift', sans-serif;
        color:aliceblue
      }
    }

    .navbar-bg {
      background-color: #519872;
    }

    .window1-bg {
      background-color: #85c57d;
    }

    .window2-bg {
      background-color: #4b9aa0;
    }

    .window3-bg {
      background-color: #1c82ad;
    }

    .window4-bg {
      background-color: #3b6840;
    }

    .alerts-bg{
      background-color: #146356;
    }
    .alertsRed-bg{
      background-color: #e86a33;
    }
  </style>
  <title>Hydrobox UI</title>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
</head>

<body>
  <nav class="navbar navbar-expand-lg navbar-bg">
    <div class="container-fluid">
      <a class="navbar-brand" href="/home"> 
        <h1 class="fs-5" style="color:aliceblue">Hy<%= name %>!</h1>
      </a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="/home">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/control">Controls</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/logout?_method=DELETE">Log out</a>
          </li>
        </ul>
      </div>
    </div>
  </nav> 
  <div class="container-fluid g-0">
    <div class="row g-0">
      <div class="col">
        <div class="window window4-bg">
          Main tank
          <div style="display: flex;">
            <span class="fs-4" id="wlvl"></span>
            <span class="fs-4">%</span> 
          </div>
        </div>
      </div>
      <div class="col">
        <div class="window window2-bg">
          Water t
          <div style="display: flex;">
            <span class="fs-4" id="wtemp"></span>
            <span class="fs-4">&#8451;</span>
          </div>
        </div>
      </div>
      <div class="col">
        <div class="window window3-bg">
          Air t
          <div style="display: flex">
            <span class="fs-4" id="airtemp"></span>
            <span class="fs-4">&#8451;</span>
          </div>
          <div style="display: flex">
            <span class="fs-4" id="airtemp1"></span>
            <span class="fs-4">&#8451;</span>
          </div>
        </div>
      </div>
      <div class="col">
        <div class="window window1-bg">
          Vent
          <div style="display: flex;">
            <span class="fs-4" id="vent"></span>
            <span class="fs-4">%</span>
          </div>
        </div>
      </div>
    </div>
    <div class="row g-0">
      <div class="col">
        <div class="window window2-bg">
          pH
          <div style="display: flex;">
            <span class="fs-4" id="ph"></span>
            <span class="fs-4">pH</span>
          </div>
        </div>
      </div>
      <div class="col">
        <div class="window window3-bg">
          TDS
          <div style="display: flex;">
            <span class="fs-4" id="TDS"></span>
            <span class="fs-4">ppm</span>
          </div>
        </div>
      </div>
      <div class="col">
        <div class="window window1-bg">
          Air RH
          <div style="display: flex;">
            <span class="fs-4" id="rh"></span>
            <span class="fs-4">%</span>
          </div>
          <div style="display: flex;">
            <span class="fs-4" id="rh1"></span>
            <span class="fs-4">%</span>
          </div>
        </div>
      </div>
      <div class="col">
        <div class="window window4-bg">
          Pump
          <div style="display: flex;">
            <span class="fs-4" id="pump"></span>
            <span class="fs-4"></span>
          </div>
        </div>
      </div>  
    </div>
    <div class="row g-0">
      <div class="alerts alerts-bg fs-5" id="status">
        Alerts:&nbsp;
        <span id="alerts"></span> 
      </div>
    </div>
  </div>
  <script
  src="https://code.jquery.com/jquery-3.7.0.js"
  integrity="sha256-JlqSTELeR4TLqP0OG9dxM7yDPqX1ox/HfgiSLBj8+kM="
  crossorigin="anonymous"></script>
  <script> //rebuild to arrow functions
    function fetchAndUpdateValue() {
      fetch('/values')
        .then(response => {
          if (!response.ok) {
            throw new Error('Error fetching data')
          }
          return response.json()
        })
        .then(data => {
          const wlvl = document.getElementById('wlvl')
          const wtemp = document.getElementById('wtemp')
          const airtemp = document.getElementById('airtemp')
          const airtemp1 = document.getElementById('airtemp1')
          const vent = document.getElementById('vent')
          const ph = document.getElementById('ph')
          const TDS = document.getElementById('TDS')
          const rh = document.getElementById('rh')
          const rh1 = document.getElementById('rh1')
          const pump = document.getElementById('pump')
          const alerts = document.getElementById('alerts')

          const arr = data.value.split('&') //first 4 values after ruuvi values are reserved for alerts
          
          if (airtemp) {
            airtemp.textContent = arr[0]
          }
          if (airtemp1) {
            airtemp1.textContent = arr[1]
          }
          if (rh) {
            rh.textContent = arr[2]
          }
          if (rh1) {
            rh1.textContent = arr[3]
          }
          if (wlvl) {
            wlvl.textContent = arr[6]
          }
          if (wtemp) {
            wtemp.textContent = arr[9]
          }
          if (vent) {
            vent.textContent = arr[12]
          }
          if (ph) {
            ph.textContent = arr[10]
          }
          if (TDS) {
            TDS.textContent = arr[11]
          }
          if (pump) {
            if (arr[13] > 0){
              pump.textContent = 'ON'
            }
            else{
              pump.textContent = 'OFF'
            }
          }
        
          if (alerts) {
            if (arr[6] < 20 && arr[6] != ''){
              alerts.textContent = ' Water level low'
              document.getElementById('status').classList.add('alertsRed-bg') 
            } else if (!arr[8]){
              alerts.textContent = ' No data received from Controllino'
              document.getElementById('status').classList.add('alertsRed-bg') 
            } else if (arr[4] <= 40){
              alerts.textContent = ' Ph up solution ' + arr[4] + '%'
              document.getElementById('status').classList.add('alertsRed-bg')
            } else if (arr[5] <= 40){
              alerts.textContent = ' Ph down solution ' + arr[5] + '%'
              document.getElementById('status').classList.add('alertsRed-bg')
            } else if (arr[7] <= 40){
              alerts.textContent = ' TDS up solution ' + arr[7] + '%'
              document.getElementById('status').classList.add('alertsRed-bg')
            } else if (arr[8] <= 40){
              alerts.textContent = ' TDS down solution ' + arr[8] + '%'
              document.getElementById('status').classList.add('alertsRed-bg')
            } else {
              document.getElementById('status').classList.remove('alertsRed-bg') 
              alerts.textContent = ' No alerts'
            }

          }
        })
        .catch(error => {
          console.error('Error fetching data:', error.message);
        });
    }

    document.addEventListener('DOMContentLoaded', function () {
      fetchAndUpdateValue();
      setInterval(fetchAndUpdateValue, 50);
    });
  </script>
</body>

</html>